{
  "abi": [],
  "allSourcePaths": {
    "2": "contracts/library/BribesLogic.sol",
    "3": "interfaces/token/IERC20.sol",
    "4": "interfaces/votium/IVotiumBribe.sol"
  },
  "ast": {
    "absolutePath": "contracts/library/BribesLogic.sol",
    "exportedSymbols": {
      "BribesLogic": [
        213
      ],
      "IERC20": [
        298
      ],
      "IVotiumBribe": [
        326
      ]
    },
    "id": 214,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 119,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "interfaces/votium/IVotiumBribe.sol",
        "file": "../../interfaces/votium/IVotiumBribe.sol",
        "id": 120,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 214,
        "sourceUnit": 327,
        "src": "57:50:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/token/IERC20.sol",
        "file": "../../interfaces/token/IERC20.sol",
        "id": 121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 214,
        "sourceUnit": 299,
        "src": "108:43:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BribesLogic",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 213,
        "linearizedBaseContracts": [
          213
        ],
        "name": "BribesLogic",
        "nameLocation": "161:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "418:793:2",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "433:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "428:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "428:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "476:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BribesLogic_$213",
                              "typeString": "library BribesLogic"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BribesLogic_$213",
                              "typeString": "library BribesLogic"
                            }
                          ],
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "468:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 143,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "468:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "468:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "450:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 139,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "443:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$298_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "443:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$298",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 227,
                      "src": "443:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "443:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "428:54:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 150,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "500:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "510:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "500:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e73",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "513:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4",
                          "typeString": "literal_string \"No tokens\""
                        },
                        "value": "No tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00edc2c3a8877f5a241dfbfdd7979302a964c365b4d66d5aec2b6d6e063514d4",
                          "typeString": "literal_string \"No tokens\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "492:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "492:33:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 156,
                      "name": "_tokensPerVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "540:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 157,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "557:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "540:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 164,
                  "nodeType": "IfStatement",
                  "src": "536:79:2",
                  "trueBody": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "566:49:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 159,
                            "name": "_tokensPerVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "580:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 160,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "597:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "580:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "580:24:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 166,
                          "name": "_proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "721:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 167,
                          "name": "_lastProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "734:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "721:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427269626520616c72656164792073656e74",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "749:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4af05b52d58ba2b4c078ce7ac92d81cf4bc23e3c1e387656d88bd69bbd59a5a",
                          "typeString": "literal_string \"Bribe already sent\""
                        },
                        "value": "Bribe already sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4af05b52d58ba2b4c078ce7ac92d81cf4bc23e3c1e387656d88bd69bbd59a5a",
                          "typeString": "literal_string \"Bribe already sent\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "713:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "713:57:2"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "810:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "781:37:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$305_memory_ptr",
                        "typeString": "struct IVotiumBribe.Proposal"
                      },
                      "typeName": {
                        "id": 175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 174,
                          "name": "IVotiumBribe.Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 305,
                          "src": "781:21:2"
                        },
                        "referencedDeclaration": 305,
                        "src": "781:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$305_storage_ptr",
                          "typeString": "struct IVotiumBribe.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "_proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "861:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 178,
                            "name": "_votiumBribe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "834:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "IVotiumBribe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "821:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVotiumBribe_$326_$",
                            "typeString": "type(contract IVotiumBribe)"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotiumBribe_$326",
                          "typeString": "contract IVotiumBribe"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposalInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 314,
                      "src": "821:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$305_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct IVotiumBribe.Proposal memory)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$305_memory_ptr",
                      "typeString": "struct IVotiumBribe.Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "781:90:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 185,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "890:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "890:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 187,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "908:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$305_memory_ptr",
                              "typeString": "struct IVotiumBribe.Proposal memory"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 302,
                          "src": "908:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "890:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c2045787069726564",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "927:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18dc2b7661ff5abbac85fdba582f29d93f3947e15649117ae067c2efee5d3bfc",
                          "typeString": "literal_string \"Proposal Expired\""
                        },
                        "value": "Proposal Expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18dc2b7661ff5abbac85fdba582f29d93f3947e15649117ae067c2efee5d3bfc",
                          "typeString": "literal_string \"Proposal Expired\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "882:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 194,
                          "name": "_choiceIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "997:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 195,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1013:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$305_memory_ptr",
                              "typeString": "struct IVotiumBribe.Proposal memory"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 304,
                          "src": "1013:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "997:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476175676520646f65736e74206578697374",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1032:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71358f1e2b8d845382019922670e904b0b8a9441b7ed4c1602aaca3ddf9b2b63",
                          "typeString": "literal_string \"Gauge doesnt exist\""
                        },
                        "value": "Gauge doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71358f1e2b8d845382019922670e904b0b8a9441b7ed4c1602aaca3ddf9b2b63",
                          "typeString": "literal_string \"Gauge doesnt exist\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "989:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "989:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1156:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 206,
                        "name": "_tokensPerVote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1164:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 207,
                        "name": "_proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1180:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 208,
                        "name": "_choiceIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1191:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 202,
                            "name": "_votiumBribe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "1129:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 201,
                          "name": "IVotiumBribe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "1116:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVotiumBribe_$326_$",
                            "typeString": "type(contract IVotiumBribe)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1116:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotiumBribe_$326",
                          "typeString": "contract IVotiumBribe"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositBribe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "1116:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,uint256) external"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:88:2"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "179:87:2",
              "text": "@dev sends the token incentives to curve gauge votes for the next vote cycle/period"
            },
            "functionSelector": "dbf15fc5",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendBribe",
            "nameLocation": "280:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "298:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "290:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "314:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "306:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_tokensPerVote",
                  "nameLocation": "330:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "325:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_choiceIndex",
                  "nameLocation": "351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "346:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_lastProposal",
                  "nameLocation": "374:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "366:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_votiumBribe",
                  "nameLocation": "397:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "389:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "289:121:2"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:0:2"
            },
            "scope": 213,
            "src": "271:940:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 214,
        "src": "153:1060:2",
        "usedErrors": []
      }
    ],
    "src": "32:1181:2"
  },
  "bytecode": "61040d61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063dbf15fc51461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610309565b61005c565b005b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b15801561009e57600080fd5b505afa1580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d69190610361565b9050600081116101195760405162461bcd60e51b81526020600482015260096024820152684e6f20746f6b656e7360b81b60448201526064015b60405180910390fd5b80851115610125578094505b8286141561016a5760405162461bcd60e51b8152602060048201526012602482015271109c9a589948185b1c9958591e481cd95b9d60721b6044820152606401610110565b6040516329ed33fb60e11b8152600481018790526000906001600160a01b038416906353da67f690602401604080518083038186803b1580156101ac57600080fd5b505afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e4919061037a565b8051909150421061022a5760405162461bcd60e51b815260206004820152601060248201526f141c9bdc1bdcd85b08115e1c1a5c995960821b6044820152606401610110565b80602001518511156102735760405162461bcd60e51b815260206004820152601260248201527111d85d59d948191bd95cdb9d08195e1a5cdd60721b6044820152606401610110565b6040516307bdaea560e51b81526001600160a01b03898116600483015260248201889052604482018990526064820187905284169063f7b5d4a090608401600060405180830381600087803b1580156102cb57600080fd5b505af11580156102df573d6000803e3d6000fd5b505050505050505050505050565b80356001600160a01b038116811461030457600080fd5b919050565b60008060008060008060c0878903121561032257600080fd5b61032b876102ed565b95506020870135945060408701359350606087013592506080870135915061035560a088016102ed565b90509295509295509295565b60006020828403121561037357600080fd5b5051919050565b60006040828403121561038c57600080fd5b6040516040810181811067ffffffffffffffff821117156103bd57634e487b7160e01b600052604160045260246000fd5b60405282518152602092830151928101929092525091905056fea2646970667358221220f2e39008e82e0d34fbb0f9eac4ecbeac29280ac1dc1e7b922a79554c5e6a8f9764736f6c63430008090033",
  "bytecodeSha1": "bb40e3f3716298751eaabd2754b31310da6e63c6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "BribesLogic",
  "coverageMap": {
    "branches": {
      "2": {
        "BribesLogic.sendBribe": {
          "6": [
            500,
            511,
            true
          ],
          "7": [
            540,
            564,
            false
          ],
          "8": [
            721,
            747,
            true
          ],
          "9": [
            890,
            925,
            true
          ],
          "10": [
            997,
            1030,
            true
          ]
        }
      },
      "3": {},
      "4": {}
    },
    "statements": {
      "2": {
        "BribesLogic.sendBribe": {
          "0": [
            492,
            525
          ],
          "1": [
            580,
            604
          ],
          "2": [
            713,
            770
          ],
          "3": [
            882,
            946
          ],
          "4": [
            989,
            1053
          ],
          "5": [
            1116,
            1204
          ]
        }
      },
      "3": {},
      "4": {}
    }
  },
  "dependencies": [
    "IERC20",
    "IVotiumBribe"
  ],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063dbf15fc51461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610309565b61005c565b005b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b15801561009e57600080fd5b505afa1580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d69190610361565b9050600081116101195760405162461bcd60e51b81526020600482015260096024820152684e6f20746f6b656e7360b81b60448201526064015b60405180910390fd5b80851115610125578094505b8286141561016a5760405162461bcd60e51b8152602060048201526012602482015271109c9a589948185b1c9958591e481cd95b9d60721b6044820152606401610110565b6040516329ed33fb60e11b8152600481018790526000906001600160a01b038416906353da67f690602401604080518083038186803b1580156101ac57600080fd5b505afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e4919061037a565b8051909150421061022a5760405162461bcd60e51b815260206004820152601060248201526f141c9bdc1bdcd85b08115e1c1a5c995960821b6044820152606401610110565b80602001518511156102735760405162461bcd60e51b815260206004820152601260248201527111d85d59d948191bd95cdb9d08195e1a5cdd60721b6044820152606401610110565b6040516307bdaea560e51b81526001600160a01b03898116600483015260248201889052604482018990526064820187905284169063f7b5d4a090608401600060405180830381600087803b1580156102cb57600080fd5b505af11580156102df573d6000803e3d6000fd5b505050505050505050505050565b80356001600160a01b038116811461030457600080fd5b919050565b60008060008060008060c0878903121561032257600080fd5b61032b876102ed565b95506020870135945060408701359350606087013592506080870135915061035560a088016102ed565b90509295509295509295565b60006020828403121561037357600080fd5b5051919050565b60006040828403121561038c57600080fd5b6040516040810181811067ffffffffffffffff821117156103bd57634e487b7160e01b600052604160045260246000fd5b60405282518152602092830151928101929092525091905056fea2646970667358221220f2e39008e82e0d34fbb0f9eac4ecbeac29280ac1dc1e7b922a79554c5e6a8f9764736f6c63430008090033",
  "deployedSourceMap": "153:1060:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;271:940;;;;;;;;;;-1:-1:-1;271:940:2;;;;;:::i;:::-;;:::i;:::-;;;443:39;;-1:-1:-1;;;443:39:2;;476:4;443:39;;;878:51:5;428:12:2;;-1:-1:-1;;;;;443:24:2;;;;;851:18:5;;443:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;428:54;;510:1;500:7;:11;492:33;;;;-1:-1:-1;;;492:33:2;;1331:2:5;492:33:2;;;1313:21:5;1370:1;1350:18;;;1343:29;-1:-1:-1;;;1388:18:5;;;1381:39;1437:18;;492:33:2;;;;;;;;;557:7;540:14;:24;536:79;;;597:7;580:24;;536:79;734:13;721:9;:26;;713:57;;;;-1:-1:-1;;;713:57:2;;1668:2:5;713:57:2;;;1650:21:5;1707:2;1687:18;;;1680:30;-1:-1:-1;;;1726:18:5;;;1719:48;1784:18;;713:57:2;1466:342:5;713:57:2;821:50;;-1:-1:-1;;;821:50:2;;;;;1959:25:5;;;781:37:2;;-1:-1:-1;;;;;821:39:2;;;;;1932:18:5;;821:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;908:17;;781:90;;-1:-1:-1;890:15:2;:35;882:64;;;;-1:-1:-1;;;882:64:2;;2800:2:5;882:64:2;;;2782:21:5;2839:2;2819:18;;;2812:30;-1:-1:-1;;;2858:18:5;;;2851:46;2914:18;;882:64:2;2598:340:5;882:64:2;1013:8;:17;;;997:12;:33;;989:64;;;;-1:-1:-1;;;989:64:2;;3145:2:5;989:64:2;;;3127:21:5;3184:2;3164:18;;;3157:30;-1:-1:-1;;;3203:18:5;;;3196:48;3261:18;;989:64:2;2943:342:5;989:64:2;1116:88;;-1:-1:-1;;;1116:88:2;;-1:-1:-1;;;;;3539:32:5;;;1116:88:2;;;3521:51:5;3588:18;;;3581:34;;;3631:18;;;3624:34;;;3674:18;;;3667:34;;;1116:39:2;;;;;3493:19:5;;1116:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:793;;271:940;;;;;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:535::-;296:6;304;312;320;328;336;389:3;377:9;368:7;364:23;360:33;357:53;;;406:1;403;396:12;357:53;429:29;448:9;429:29;:::i;:::-;419:39;;505:2;494:9;490:18;477:32;467:42;;556:2;545:9;541:18;528:32;518:42;;607:2;596:9;592:18;579:32;569:42;;658:3;647:9;643:19;630:33;620:43;;682:39;716:3;705:9;701:19;682:39;:::i;:::-;672:49;;192:535;;;;;;;;:::o;940:184::-;1010:6;1063:2;1051:9;1042:7;1038:23;1034:32;1031:52;;;1079:1;1076;1069:12;1031:52;-1:-1:-1;1102:16:5;;940:184;-1:-1:-1;940:184:5:o;1995:598::-;2090:6;2143:2;2131:9;2122:7;2118:23;2114:32;2111:52;;;2159:1;2156;2149:12;2111:52;2192:2;2186:9;2234:2;2226:6;2222:15;2303:6;2291:10;2288:22;2267:18;2255:10;2252:34;2249:62;2246:185;;;2353:10;2348:3;2344:20;2341:1;2334:31;2388:4;2385:1;2378:15;2416:4;2413:1;2406:15;2246:185;2447:2;2440:22;2486:16;;2471:32;;2557:2;2542:18;;;2536:25;2519:15;;;2512:50;;;;-1:-1:-1;2478:6:5;1995:598;-1:-1:-1;1995:598:5:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "sendBribe(address,bytes32,uint256,uint256,bytes32,address)": {
        "details": "sends the token incentives to curve gauge votes for the next vote cycle/period"
      }
    },
    "version": 1
  },
  "offset": [
    153,
    1213
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBF15FC5 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH2 0x55 CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x5C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20746F6B656E73 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x125 JUMPI DUP1 SWAP5 POP JUMPDEST DUP3 DUP7 EQ ISZERO PUSH2 0x16A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109C9A589948185B1C9958591E481CD95B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x29ED33FB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x53DA67F6 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP TIMESTAMP LT PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141C9BDC1BDCD85B08115E1C1A5C9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x110 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 GT ISZERO PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11D85D59D948191BD95CDB9D08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7BDAEA5 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP8 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xF7B5D4A0 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B DUP8 PUSH2 0x2ED JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x355 PUSH1 0xA0 DUP9 ADD PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE3 SWAP1 ADDMOD 0xE8 0x2E 0xD CALLVALUE 0xFB 0xB0 0xF9 0xEA 0xC4 0xEC 0xBE 0xAC 0x29 0x28 EXP 0xC1 0xDC 0x1E PUSH28 0x922A79554C5E6A8F9764736F6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        153,
        1213
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "EQ",
      "path": "2"
    },
    "23": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "28": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "30": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "LT",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35"
    },
    "35": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "36": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "38": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "SHR",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "DUP1",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDBF15FC5"
    },
    "48": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "EQ",
      "path": "2"
    },
    "49": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A"
    },
    "52": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "56": {
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "DUP1",
      "path": "2"
    },
    "57": {
      "first_revert": true,
      "fn": null,
      "offset": [
        153,
        1213
      ],
      "op": "REVERT",
      "path": "2"
    },
    "58": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "59": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "60": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "61": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "62": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46"
    },
    "65": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "66": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "68": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "69": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "REVERT",
      "path": "2"
    },
    "70": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "71": {
      "op": "POP"
    },
    "72": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A"
    },
    "75": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55"
    },
    "78": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "79": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "81": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "84": {
      "fn": "BribesLogic.sendBribe",
      "jump": "i",
      "offset": [
        271,
        1211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "85": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "86": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C"
    },
    "89": {
      "fn": "BribesLogic.sendBribe",
      "jump": "i",
      "offset": [
        271,
        1211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "90": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "91": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "STOP",
      "path": "2"
    },
    "92": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "93": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "95": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "96": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "101": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "103": {
      "op": "SHL"
    },
    "104": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "105": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "106": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        476,
        480
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "107": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "109": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "110": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ADD",
      "path": "2"
    },
    "111": {
      "op": "MSTORE"
    },
    "112": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        428,
        440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "114": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        428,
        440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "121": {
      "op": "SHL"
    },
    "122": {
      "op": "SUB"
    },
    "123": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        467
      ],
      "op": "DUP9",
      "path": "2"
    },
    "124": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        467
      ],
      "op": "AND",
      "path": "2"
    },
    "125": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "126": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        467
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "131": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "134": {
      "op": "ADD"
    },
    "135": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "137": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "139": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "140": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "141": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP4",
      "path": "2"
    },
    "142": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "SUB",
      "path": "2"
    },
    "143": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "144": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP7",
      "path": "2"
    },
    "145": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "147": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "148": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "149": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "150": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E"
    },
    "153": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "154": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "156": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "REVERT",
      "path": "2"
    },
    "158": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "159": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "160": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "GAS",
      "path": "2"
    },
    "161": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "162": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "163": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "165": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2"
    },
    "168": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "170": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "172": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "174": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "175": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "177": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "REVERT",
      "path": "2"
    },
    "178": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "179": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "180": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "181": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "182": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "183": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "185": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "186": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "187": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "189": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "NOT",
      "path": "2"
    },
    "190": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "192": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "193": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ADD",
      "path": "2"
    },
    "194": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "AND",
      "path": "2"
    },
    "195": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "196": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ADD",
      "path": "2"
    },
    "197": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "198": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "200": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "201": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "202": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "203": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "ADD",
      "path": "2"
    },
    "204": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "205": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6"
    },
    "208": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "209": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "210": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x361"
    },
    "213": {
      "fn": "BribesLogic.sendBribe",
      "jump": "i",
      "offset": [
        443,
        482
      ],
      "op": "JUMP",
      "path": "2"
    },
    "214": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        443,
        482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "215": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        428,
        482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "216": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        428,
        482
      ],
      "op": "POP",
      "path": "2"
    },
    "217": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        510,
        511
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x0"
    },
    "219": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        500,
        507
      ],
      "op": "DUP2",
      "path": "2"
    },
    "220": {
      "branch": 6,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        500,
        511
      ],
      "op": "GT",
      "path": "2"
    },
    "221": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119"
    },
    "224": {
      "branch": 6,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "225": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "227": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "234": {
      "op": "SHL"
    },
    "235": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "236": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "239": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "241": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "DUP3",
      "path": "2"
    },
    "242": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "ADD",
      "path": "2"
    },
    "243": {
      "op": "MSTORE"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "248": {
      "op": "DUP3"
    },
    "249": {
      "op": "ADD"
    },
    "250": {
      "op": "MSTORE"
    },
    "251": {
      "op": "PUSH9",
      "value": "0x4E6F20746F6B656E73"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "266": {
      "op": "DUP3"
    },
    "267": {
      "op": "ADD"
    },
    "268": {
      "op": "MSTORE"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "271": {
      "op": "ADD"
    },
    "272": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "273": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "275": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "276": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "278": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "SUB",
      "path": "2"
    },
    "279": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "280": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "281": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        492,
        525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "282": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        557,
        564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "283": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        540,
        554
      ],
      "op": "DUP6",
      "path": "2"
    },
    "284": {
      "branch": 7,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        540,
        564
      ],
      "op": "GT",
      "path": "2"
    },
    "285": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        536,
        615
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "286": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        536,
        615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125"
    },
    "289": {
      "branch": 7,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        536,
        615
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "290": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        597,
        604
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 1
    },
    "291": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        580,
        604
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "292": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        580,
        604
      ],
      "op": "POP",
      "path": "2"
    },
    "293": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        536,
        615
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "294": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        734,
        747
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 2
    },
    "295": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        721,
        730
      ],
      "op": "DUP7",
      "path": "2"
    },
    "296": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        721,
        747
      ],
      "op": "EQ",
      "path": "2"
    },
    "297": {
      "branch": 8,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        721,
        747
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "298": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16A"
    },
    "301": {
      "branch": 8,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "302": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "304": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "311": {
      "op": "SHL"
    },
    "312": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "313": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "316": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "318": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "319": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "ADD",
      "path": "2"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "325": {
      "op": "DUP3"
    },
    "326": {
      "op": "ADD"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH18",
      "value": "0x109C9A589948185B1C9958591E481CD95B9D"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "349": {
      "op": "SHL"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "352": {
      "op": "DUP3"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x110"
    },
    "361": {
      "op": "JUMP"
    },
    "362": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        713,
        770
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "363": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "365": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "366": {
      "op": "PUSH4",
      "value": "0x29ED33FB"
    },
    "371": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "373": {
      "op": "SHL"
    },
    "374": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "375": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "376": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "378": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "379": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ADD",
      "path": "2"
    },
    "380": {
      "op": "DUP8"
    },
    "381": {
      "op": "SWAP1"
    },
    "382": {
      "op": "MSTORE"
    },
    "383": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        781,
        818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "385": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        781,
        818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "op": "SUB"
    },
    "394": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        860
      ],
      "op": "DUP5",
      "path": "2"
    },
    "395": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        860
      ],
      "op": "AND",
      "path": "2"
    },
    "396": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        860
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "397": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        860
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x53DA67F6"
    },
    "402": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        860
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "408": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "409": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "410": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "411": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP4",
      "path": "2"
    },
    "412": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "SUB",
      "path": "2"
    },
    "413": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "414": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP7",
      "path": "2"
    },
    "415": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "416": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "417": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "418": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "419": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "420": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "423": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "424": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "426": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "427": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "REVERT",
      "path": "2"
    },
    "428": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "430": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "GAS",
      "path": "2"
    },
    "431": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "432": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "433": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "434": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "435": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0"
    },
    "438": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "439": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "440": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "442": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "443": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "444": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "445": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "447": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "REVERT",
      "path": "2"
    },
    "448": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "449": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "450": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "451": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "452": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "453": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "455": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "456": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "457": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "459": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "NOT",
      "path": "2"
    },
    "460": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "462": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP3",
      "path": "2"
    },
    "463": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ADD",
      "path": "2"
    },
    "464": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "AND",
      "path": "2"
    },
    "465": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP3",
      "path": "2"
    },
    "466": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ADD",
      "path": "2"
    },
    "467": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP1",
      "path": "2"
    },
    "468": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "470": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "471": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "POP",
      "path": "2"
    },
    "472": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "473": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "ADD",
      "path": "2"
    },
    "474": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "475": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E4"
    },
    "478": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "479": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "480": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37A"
    },
    "483": {
      "fn": "BribesLogic.sendBribe",
      "jump": "i",
      "offset": [
        821,
        871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "484": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        821,
        871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "485": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        908,
        925
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 3
    },
    "486": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        908,
        925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "487": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        781,
        871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "488": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        781,
        871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "489": {
      "op": "POP"
    },
    "490": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        890,
        905
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "491": {
      "branch": 9,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        890,
        925
      ],
      "op": "LT",
      "path": "2"
    },
    "492": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22A"
    },
    "495": {
      "branch": 9,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "496": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "498": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "505": {
      "op": "SHL"
    },
    "506": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "DUP2",
      "path": "2"
    },
    "507": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "512": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "DUP3",
      "path": "2"
    },
    "513": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "ADD",
      "path": "2"
    },
    "514": {
      "op": "MSTORE"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "519": {
      "op": "DUP3"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "op": "MSTORE"
    },
    "522": {
      "op": "PUSH16",
      "value": "0x141C9BDC1BDCD85B08115E1C1A5C9959"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "541": {
      "op": "SHL"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "544": {
      "op": "DUP3"
    },
    "545": {
      "op": "ADD"
    },
    "546": {
      "op": "MSTORE"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "549": {
      "op": "ADD"
    },
    "550": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x110"
    },
    "553": {
      "op": "JUMP"
    },
    "554": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        882,
        946
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "555": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1013,
        1021
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 4
    },
    "556": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1013,
        1030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "558": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1013,
        1030
      ],
      "op": "ADD",
      "path": "2"
    },
    "559": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1013,
        1030
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "560": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        997,
        1009
      ],
      "op": "DUP6",
      "path": "2"
    },
    "561": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        997,
        1030
      ],
      "op": "GT",
      "path": "2"
    },
    "562": {
      "branch": 10,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        997,
        1030
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "563": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273"
    },
    "566": {
      "branch": 10,
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "567": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "569": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "578": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "581": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "583": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "DUP3",
      "path": "2"
    },
    "584": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "ADD",
      "path": "2"
    },
    "585": {
      "op": "MSTORE"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "590": {
      "op": "DUP3"
    },
    "591": {
      "op": "ADD"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH18",
      "value": "0x11D85D59D948191BD95CDB9D08195E1A5CDD"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "617": {
      "op": "DUP3"
    },
    "618": {
      "op": "ADD"
    },
    "619": {
      "op": "MSTORE"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "622": {
      "op": "ADD"
    },
    "623": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x110"
    },
    "626": {
      "op": "JUMP"
    },
    "627": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        989,
        1053
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "628": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x40"
    },
    "630": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "631": {
      "op": "PUSH4",
      "value": "0x7BDAEA5"
    },
    "636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "638": {
      "op": "SHL"
    },
    "639": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "640": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "SUB"
    },
    "649": {
      "op": "DUP10"
    },
    "650": {
      "op": "DUP2"
    },
    "651": {
      "op": "AND"
    },
    "652": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "654": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP4",
      "path": "2"
    },
    "655": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "ADD",
      "path": "2"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "659": {
      "op": "DUP3"
    },
    "660": {
      "op": "ADD"
    },
    "661": {
      "op": "DUP9"
    },
    "662": {
      "op": "SWAP1"
    },
    "663": {
      "op": "MSTORE"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "666": {
      "op": "DUP3"
    },
    "667": {
      "op": "ADD"
    },
    "668": {
      "op": "DUP10"
    },
    "669": {
      "op": "SWAP1"
    },
    "670": {
      "op": "MSTORE"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "DUP8"
    },
    "676": {
      "op": "SWAP1"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1155
      ],
      "op": "DUP5",
      "path": "2"
    },
    "679": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1155
      ],
      "op": "AND",
      "path": "2"
    },
    "680": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "681": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1155
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF7B5D4A0"
    },
    "686": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "689": {
      "op": "ADD"
    },
    "690": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "692": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "694": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "695": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "696": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP4",
      "path": "2"
    },
    "697": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "SUB",
      "path": "2"
    },
    "698": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP2",
      "path": "2"
    },
    "699": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "701": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP8",
      "path": "2"
    },
    "702": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "703": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "704": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "705": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "706": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "707": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "710": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "711": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "713": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "714": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "REVERT",
      "path": "2"
    },
    "715": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "716": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "POP",
      "path": "2"
    },
    "717": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "GAS",
      "path": "2"
    },
    "718": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "CALL",
      "path": "2"
    },
    "719": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "720": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "721": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "722": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF"
    },
    "725": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "726": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "727": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "729": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "730": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "731": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "732": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "734": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "REVERT",
      "path": "2"
    },
    "735": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "736": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "POP",
      "path": "2"
    },
    "737": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "POP",
      "path": "2"
    },
    "738": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "POP",
      "path": "2"
    },
    "739": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        1116,
        1204
      ],
      "op": "POP",
      "path": "2"
    },
    "740": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        418,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "741": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        418,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "742": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "743": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "744": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "745": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "746": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "747": {
      "fn": "BribesLogic.sendBribe",
      "offset": [
        271,
        1211
      ],
      "op": "POP",
      "path": "2"
    },
    "748": {
      "fn": "BribesLogic.sendBribe",
      "jump": "o",
      "offset": [
        271,
        1211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "749": {
      "op": "JUMPDEST"
    },
    "750": {
      "op": "DUP1"
    },
    "751": {
      "op": "CALLDATALOAD"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "DUP2"
    },
    "761": {
      "op": "AND"
    },
    "762": {
      "op": "DUP2"
    },
    "763": {
      "op": "EQ"
    },
    "764": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "767": {
      "op": "JUMPI"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "770": {
      "op": "DUP1"
    },
    "771": {
      "op": "REVERT"
    },
    "772": {
      "op": "JUMPDEST"
    },
    "773": {
      "op": "SWAP2"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "jump": "o",
      "op": "JUMP"
    },
    "777": {
      "op": "JUMPDEST"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "780": {
      "op": "DUP1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "783": {
      "op": "DUP1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "786": {
      "op": "DUP1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "789": {
      "op": "DUP8"
    },
    "790": {
      "op": "DUP10"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "op": "SLT"
    },
    "793": {
      "op": "ISZERO"
    },
    "794": {
      "op": "PUSH2",
      "value": "0x322"
    },
    "797": {
      "op": "JUMPI"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "800": {
      "op": "DUP1"
    },
    "801": {
      "op": "REVERT"
    },
    "802": {
      "op": "JUMPDEST"
    },
    "803": {
      "op": "PUSH2",
      "value": "0x32B"
    },
    "806": {
      "op": "DUP8"
    },
    "807": {
      "op": "PUSH2",
      "value": "0x2ED"
    },
    "810": {
      "jump": "i",
      "op": "JUMP"
    },
    "811": {
      "op": "JUMPDEST"
    },
    "812": {
      "op": "SWAP6"
    },
    "813": {
      "op": "POP"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "816": {
      "op": "DUP8"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "op": "CALLDATALOAD"
    },
    "819": {
      "op": "SWAP5"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "823": {
      "op": "DUP8"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "CALLDATALOAD"
    },
    "826": {
      "op": "SWAP4"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "830": {
      "op": "DUP8"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "CALLDATALOAD"
    },
    "833": {
      "op": "SWAP3"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "837": {
      "op": "DUP8"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "CALLDATALOAD"
    },
    "840": {
      "op": "SWAP2"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "op": "PUSH2",
      "value": "0x355"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "847": {
      "op": "DUP9"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "op": "PUSH2",
      "value": "0x2ED"
    },
    "852": {
      "jump": "i",
      "op": "JUMP"
    },
    "853": {
      "op": "JUMPDEST"
    },
    "854": {
      "op": "SWAP1"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "SWAP3"
    },
    "857": {
      "op": "SWAP6"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "op": "SWAP3"
    },
    "860": {
      "op": "SWAP6"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "op": "SWAP3"
    },
    "863": {
      "op": "SWAP6"
    },
    "864": {
      "jump": "o",
      "op": "JUMP"
    },
    "865": {
      "op": "JUMPDEST"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "DUP5"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "op": "SLT"
    },
    "874": {
      "op": "ISZERO"
    },
    "875": {
      "op": "PUSH2",
      "value": "0x373"
    },
    "878": {
      "op": "JUMPI"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "881": {
      "op": "DUP1"
    },
    "882": {
      "op": "REVERT"
    },
    "883": {
      "op": "JUMPDEST"
    },
    "884": {
      "op": "POP"
    },
    "885": {
      "op": "MLOAD"
    },
    "886": {
      "op": "SWAP2"
    },
    "887": {
      "op": "SWAP1"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "jump": "o",
      "op": "JUMP"
    },
    "890": {
      "op": "JUMPDEST"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "895": {
      "op": "DUP3"
    },
    "896": {
      "op": "DUP5"
    },
    "897": {
      "op": "SUB"
    },
    "898": {
      "op": "SLT"
    },
    "899": {
      "op": "ISZERO"
    },
    "900": {
      "op": "PUSH2",
      "value": "0x38C"
    },
    "903": {
      "op": "JUMPI"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "906": {
      "op": "DUP1"
    },
    "907": {
      "op": "REVERT"
    },
    "908": {
      "op": "JUMPDEST"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "911": {
      "op": "MLOAD"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "914": {
      "op": "DUP2"
    },
    "915": {
      "op": "ADD"
    },
    "916": {
      "op": "DUP2"
    },
    "917": {
      "op": "DUP2"
    },
    "918": {
      "op": "LT"
    },
    "919": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "928": {
      "op": "DUP3"
    },
    "929": {
      "op": "GT"
    },
    "930": {
      "op": "OR"
    },
    "931": {
      "op": "ISZERO"
    },
    "932": {
      "op": "PUSH2",
      "value": "0x3BD"
    },
    "935": {
      "op": "JUMPI"
    },
    "936": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "956": {
      "op": "REVERT"
    },
    "957": {
      "op": "JUMPDEST"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "DUP3"
    },
    "962": {
      "op": "MLOAD"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "967": {
      "op": "SWAP3"
    },
    "968": {
      "op": "DUP4"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "op": "MLOAD"
    },
    "971": {
      "op": "SWAP3"
    },
    "972": {
      "op": "DUP2"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "SWAP3"
    },
    "975": {
      "op": "SWAP1"
    },
    "976": {
      "op": "SWAP3"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "op": "SWAP2"
    },
    "980": {
      "op": "SWAP1"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4106dc9be414c9be401096021fd573c0ed26c64b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"../../interfaces/votium/IVotiumBribe.sol\";\nimport \"../../interfaces/token/IERC20.sol\";\n\nlibrary BribesLogic {\n    /// @dev sends the token incentives to curve gauge votes for the next vote cycle/period\n    function sendBribe(address _token, bytes32 _proposal, uint _tokensPerVote, uint _choiceIndex,  bytes32 _lastProposal, address _votiumBribe) public {\n        uint balance = IERC20(_token).balanceOf(address(this));\n        require(balance > 0, \"No tokens\");\n\n        if (_tokensPerVote > balance) {\n            _tokensPerVote = balance;\n        }\n\n        // this makes sure that the token incentives can be sent only once per proposal\n        require(_proposal != _lastProposal, \"Bribe already sent\");\n\n        IVotiumBribe.Proposal memory proposal = IVotiumBribe(_votiumBribe).proposalInfo(_proposal);\n\n        require(block.timestamp < proposal.deadline, \"Proposal Expired\"); // make sure the proposal exists\n        require(_choiceIndex <= proposal.maxIndex, \"Gauge doesnt exist\"); // make sure the gauge index exists in the proposal\n\n        IVotiumBribe(_votiumBribe).depositBribe(_token, _tokensPerVote, _proposal, _choiceIndex);\n    }\n}",
  "sourceMap": "153:1060:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;153:1060:2;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/library/BribesLogic.sol",
  "type": "library"
}